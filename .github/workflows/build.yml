name: build
# When the 'permissions' key is specified, unspecified permission scopes (e.g.,
# actions, checks, etc.) are set to no access (none).
permissions:
  contents: read
on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  schedule:
    # Run weekly (* is a special character in YAML, so quote the string)
    - cron: '0 0 * * 0'
  workflow_dispatch:
    inputs:
      # When git-ref is empty, HEAD will be checked out.
      git-ref:
        description: Optional git ref (branch, tag, or full SHA)
        required: false

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
        python-version: ['3.5', '3.6', '3.7', '3.8', '3.9', '3.10']

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        # When the ref is empty, HEAD will be checked out.
        ref: ${{ github.event.inputs.git-ref }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Lint
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Install
      run: |
        python -m pip install --upgrade pip
        pip install .

    # On PowerShell, a step does not fail when an intermediate command in a multiline command
    # fails. Adding '$ErrorActionPreference = "Stop"' didn't resolve the issue. The issue is
    # avoided by using a separate step for each test command.

    - name: Run Tests
      run: python -m unittest discover tests -v

    - name: Ensure Executable Runs
      run: vimgolf
